Remove everything that deals with C compilation

--- a/vterm.el
+++ b/vterm.el
@@ -42,79 +42,7 @@
 
 ;;; Code:
 
-(unless module-file-suffix
-  (error "VTerm needs module support.  Please compile Emacs with
-  the --with-modules option!"))
-
-;; Compilation of the module
-
-(defcustom vterm-module-cmake-args ""
-  "Arguments given to CMake to compile vterm-module.
-
-Currently, vterm defines the following flags (in addition to the
-ones already available in CMake):
-
-`USE_SYSTEM_LIBVTERM'.  Set it to `yes' to use the version of
-libvterm installed on your system.
-
-This string is given verbatim to CMake, so it has to have the
-correct syntax.  An example of meaningful value for this variable
-is `-DUSE_SYSTEM_LIBVTERM=yes'."
-  :type 'string
-  :group 'vterm)
-
-(defcustom vterm-always-compile-module nil
-  "If not nil, if `vterm-module' is not found, compile it without asking.
-
-When `vterm-always-compile-module' is nil, vterm will ask for
-confirmation before compiling."
-  :type  'boolean
-  :group 'vterm)
-
-(defvar vterm-install-buffer-name " *Install vterm* "
-  "Name of the buffer used for compiling vterm-module.")
-
-(defun vterm-module--cmake-is-available ()
-  "Return t if cmake is available.
-CMake is needed to build vterm, here we check that we can find
-the executable."
-
-  (unless (executable-find "cmake")
-    (error "Vterm needs CMake to be compiled.  Please, install CMake"))
-  t)
-
-;;;###autoload
-(defun vterm-module-compile ()
-  "Compile vterm-module."
-  (interactive)
-  (when (vterm-module--cmake-is-available)
-    (let* ((vterm-directory
-            (shell-quote-argument
-             (file-name-directory (locate-library "vterm"))))
-           (make-commands
-            (concat
-             "cd " vterm-directory "; \
-             mkdir -p build; \
-             cd build; \
-             cmake "
-             vterm-module-cmake-args
-             " ..; \
-             make; \
-             cd -"))
-           (buffer (get-buffer-create vterm-install-buffer-name)))
-      (pop-to-buffer buffer)
-      (if (zerop (call-process "sh" nil buffer t "-c" make-commands))
-          (message "Compilation of `emacs-libvterm' module succeeded")
-        (error "Compilation of `emacs-libvterm' module failed!")))))
-
-;; If the vterm-module is not compiled yet, compile it
-(unless (require 'vterm-module nil t)
-  (if (or vterm-always-compile-module
-            (y-or-n-p "Vterm needs `vterm-module' to work.  Compile it now? "))
-      (progn
-        (vterm-module-compile)
-        (require 'vterm-module))
-    (error "Vterm will not work until `vterm-module' is compiled!")))
+(require 'vterm-module)
 
 ;; Silence compiler warnings by informing it of what functions are defined
 (declare-function display-line-numbers-update-width "display-line-numbers")
